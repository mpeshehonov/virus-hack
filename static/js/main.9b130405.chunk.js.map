{"version":3,"sources":["blocks/Header/Header.js","pages/AdminPage/AdminPage.js","pages/Patient/index.js","blocks/Patient/index.js","pages/Patients/index.js","blocks/HealthMetrics/HealthMetrics.js","blocks/Recommends/Recommends.js","blocks/Drugs/Drugs.js","blocks/NewsItem/NewsItem.js","blocks/News/News.js","blocks/EducationItem/EducationItem.js","blocks/Education/Education.js","pages/HomePage/HomePage.js","pages/NewsPage/NewsPage.js","pages/EducationPage/EducationPage.js","pages/Notfound/index.js","blocks/MobileMenu/MobileMenu.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","className","bg","variant","Brand","href","alt","src","width","height","Nav","Link","to","Toggle","Collapse","Text","Admin","Patient","rm","useRouteMatch","useState","patient","setPatient","useEffect","fetch","params","id","then","r","json","name","email","phone","props","data","Card","style","Img","Body","Title","Button","Patients","patients","setPatients","map","key","HealthMetrics","metrics","setMetrics","Row","Col","metric","Figure","Image","picture","title","Caption","Recommends","recs","setRecs","rec","md","Drugs","drugs","setDrugs","drug","NewsItem","body","News","setKey","rubrics","setRubrics","posts","setPosts","Tabs","activeKey","onSelect","k","rubric","Tab","eventKey","filter","post","rubricId","EducationItem","Education","cats","setCats","edu","setEdu","cat","eduItem","eduCat","Homepage","Jumbotron","Container","fluid","NewsPage","EducationPage","Notfound","MobileMenu","fixed","App","path","component","AdminPage","HomePage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"ygBA+CeA,EA1CA,WACX,OACI,gCACI,kBAACC,EAAA,EAAD,CAAQC,UAAU,mBAAmBC,GAAG,QAAQC,QAAQ,SACpD,kBAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,SACf,yBACIC,IAAI,WACJC,IAAI,mBACJC,MAAM,KACNC,OAAO,KACPR,UAAU,6BANlB,YAUA,kBAACS,EAAA,EAAD,CAAKT,UAAU,WACX,kBAACS,EAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,+CAIJ,kBAACF,EAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,aAAT,qDAIJ,kBAACF,EAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,SAAT,gDAKR,kBAACZ,EAAA,EAAOa,OAAR,MACA,kBAACb,EAAA,EAAOc,SAAR,CAAiBb,UAAU,uBACvB,kBAACD,EAAA,EAAOe,KAAR,KACI,uBAAGV,KAAK,UAAR,0GC5BTW,G,MARD,WACV,OACI,wC,OC8BOC,EAhCC,WACZ,IAAMC,EAAKC,cADO,EAEYC,mBAAS,MAFrB,mBAEXC,EAFW,KAEFC,EAFE,KAUlB,OANAC,qBAAU,WACNC,MAAM,8CAAD,OAA+CN,EAAGO,OAAOC,KACzDC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAON,EAAWM,QAC7B,IAGC,yBAAK3B,UAAU,WACToB,GACF,yBAAKpB,UAAU,aACX,4BAAKoB,EAAQS,MACb,yCAGI,uBAAGzB,KAAI,kBAAagB,EAAQU,QAAUV,EAAQU,QAElD,yCAGI,uBAAG1B,KAAI,cAASgB,EAAQW,QAAUX,EAAQW,QAE9C,kBAAC,IAAD,CAAMpB,GAAG,KAAT,qC,gBCPDK,EAlBC,SAACgB,GACb,IAAMZ,EAAUY,EAAMC,KAEtB,OACI,kBAACC,EAAA,EAAD,CAAMC,MAAO,CAAE5B,MAAO,UAClB,kBAAC2B,EAAA,EAAKE,IAAN,CAAUlC,QAAQ,MAAMI,IAAI,uBAC5B,kBAAC4B,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,KAAalB,EAAQS,MACrB,kBAACK,EAAA,EAAKpB,KAAN,uGAIA,kBAACyB,EAAA,EAAD,CAAQrC,QAAQ,WAAhB,mBCQDsC,EApBE,WAAO,IAAD,EACarB,mBAAS,IADtB,mBACZsB,EADY,KACFC,EADE,KASnB,OANApB,qBAAU,WACNC,MAAM,8CACDG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAOe,EAAYf,QAC9B,IAGC,yBAAK3B,UAAU,YACX,gFAECyC,EAASE,KAAI,SAACvB,GAAD,OACV,kBAAC,EAAD,CAASwB,IAAKxB,EAAQK,GAAIQ,KAAMb,S,wDCuBjCyB,EApCO,WAAO,IAAD,EACM1B,mBAAS,IADf,mBACjB2B,EADiB,KACRC,EADQ,KASxB,OANAzB,qBAAU,WACNC,MAAM,0DACDG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAOoB,EAAWpB,QAC7B,IAGC,6BAAS3B,UAAU,QACf,kBAACgD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,0EACA,yaAGR,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKH,EAAQH,KAAI,SAACO,GAAD,OACT,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAOC,MAAR,CACI9C,IAAK4C,EAAOG,QACZhD,IAAK6C,EAAOI,QAEhB,kBAACH,EAAA,EAAOI,QAAR,KACKL,EAAOI,eCOzBE,G,MAjCI,WAAO,IAAD,EACGrC,mBAAS,IADZ,mBACdsC,EADc,KACRC,EADQ,KASrB,OANApC,qBAAU,WACNC,MAAM,8DACDG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAO+B,EAAQ/B,QAC1B,IAGC,6BAAS3B,UAAU,QACf,kBAACgD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wGACA,wSAGR,kBAACD,EAAA,EAAD,KACKS,EAAKd,KAAI,SAACgB,GAAD,OACN,kBAACV,EAAA,EAAD,CAAKW,GAAG,KACJ,kBAAC1B,EAAA,EAAD,CAAMC,MAAO,CAAE5B,MAAO,UAClB,kBAAC2B,EAAA,EAAKE,IAAN,CAAUlC,QAAQ,MAAMI,IAAKqD,EAAIN,UACjC,kBAACnB,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,KAAaqB,EAAIL,iBCYlCO,G,MAnCD,WAAO,IAAD,EACU1C,mBAAS,IADnB,mBACT2C,EADS,KACFC,EADE,KAShB,OANAzC,qBAAU,WACNC,MAAM,6DACDG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAOoC,EAASpC,QAC3B,IAGC,6BAAS3B,UAAU,QACf,kBAACgD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,iHAGR,kBAACD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACKa,EAAMnB,KAAI,SAACqB,GAAD,OACP,kBAACb,EAAA,EAAD,KACI,kBAACA,EAAA,EAAOC,MAAR,CACI9C,IAAK0D,EAAKX,QACVhD,IAAK2D,EAAKV,QAEd,kBAACH,EAAA,EAAOI,QAAR,KACKS,EAAKV,gBCXvBW,G,YAdE,SAACjC,GACd,OACI,kBAACE,EAAA,EAAD,CAAMlC,UAAU,OAAOmC,MAAO,CAAE5B,MAAO,UACnC,kBAAC2B,EAAA,EAAKE,IAAN,CAAUlC,QAAQ,MAAMI,IAAK0B,EAAMC,KAAKoB,UACxC,kBAACnB,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,KAAaN,EAAMC,KAAKqB,OACxB,kBAACpB,EAAA,EAAKpB,KAAN,KACKkB,EAAMC,KAAKiC,U,gBCmCjBC,EAzCF,WAAO,IAAD,EACOhD,mBAAS,GADhB,mBACRyB,EADQ,KACHwB,EADG,OAEejD,mBAAS,IAFxB,mBAERkD,EAFQ,KAECC,EAFD,OAGWnD,mBAAS,IAHpB,mBAGRoD,EAHQ,KAGDC,EAHC,KAiBf,OAZAlD,qBAAU,WACNC,MAAM,0DACDG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAO2C,EAAW3C,QAC7B,IAEHL,qBAAU,WACNC,MAAM,wDACDG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAO6C,EAAS7C,QAC3B,IAGC,iCACI,0EAEA,kBAAC8C,EAAA,EAAD,CACIhD,GAAG,yBACHiD,UAAW9B,EACX+B,SAAU,SAACC,GAAD,OAAOR,EAAOQ,KAEvBP,EAAQ1B,KAAI,SAACkC,GAAD,OACT,kBAACC,EAAA,EAAD,CAAKC,SAAUF,EAAOpD,GAAI6B,MAAOuB,EAAOvB,OACnCiB,EAAMS,QAAO,SAACC,GAAD,OAAUA,EAAKC,WAAaL,EAAOpD,MAC5CkB,KAAI,SAACsC,GAAD,OACL,kBAAChC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAUL,IAAKqC,EAAKxD,GAAIQ,KAAMgD,eCrB/CE,G,YAXO,SAACnD,GACnB,OACI,kBAACE,EAAA,EAAD,CAAMlC,UAAU,OAAOmC,MAAO,CAAE5B,MAAO,UACnC,kBAAC2B,EAAA,EAAKE,IAAN,CAAUlC,QAAQ,MAAMI,IAAK0B,EAAMC,KAAKoB,UACxC,kBAACnB,EAAA,EAAKG,KAAN,KACI,kBAACH,EAAA,EAAKI,MAAN,KAAaN,EAAMC,KAAKqB,WCuCzB8B,EA3CG,WAAO,IAAD,EACEjE,mBAAS,GADX,mBACbyB,EADa,KACRwB,EADQ,OAEIjD,mBAAS,IAFb,mBAEbkE,EAFa,KAEPC,EAFO,OAGEnE,mBAAS,IAHX,mBAGboE,EAHa,KAGRC,EAHQ,KAkBpB,OAbAlE,qBAAU,WACNC,MAAM,gEACDG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAO2D,EAAQ3D,QAC1B,IAEHL,qBAAU,WACNC,MAAM,8DACDG,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACC,GAAD,OAAO6D,EAAO7D,QACzB,IAIC,iCACI,kGACA,+LAEA,kBAAC8C,EAAA,EAAD,CACIhD,GAAG,yBACHiD,UAAW9B,EACX+B,SAAU,SAACC,GAAD,OAAOR,EAAOQ,KAEvBS,EAAK1C,KAAI,SAAC8C,GAAD,OACN,kBAACX,EAAA,EAAD,CAAKC,SAAUU,EAAIhE,GAAI6B,MAAOmC,EAAInC,OAC7BiC,EAAIP,QAAO,SAACU,GAAD,OAAaA,EAAQC,SAAWF,EAAIhE,MAC3CkB,KAAI,SAACsC,GAAD,OACD,kBAAChC,EAAA,EAAD,KACI,kBAAC,EAAD,CAAeL,IAAKqC,EAAKxD,GAAIQ,KAAMgD,eCTxDW,EApBE,WACb,OACI,oCACI,kBAACC,EAAA,EAAD,CAAW7F,UAAU,SACjB,sFACA,8FAIJ,kBAAC8F,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCTDC,G,MATE,WAEb,OACI,kBAACF,EAAA,EAAD,KACI,kBAAC,EAAD,SCKGG,G,MATO,WAElB,OACI,kBAACH,EAAA,EAAD,KACI,kBAAC,EAAD,SCCGI,EARE,WACb,OACI,0CCyBOC,G,MAxBI,WACf,OACI,kBAACpG,EAAA,EAAD,CAAQC,UAAU,YAAYoG,MAAM,SAASnG,GAAG,QAAQC,QAAQ,SAC5D,kBAACO,EAAA,EAAD,CAAKT,UAAU,WACX,kBAACS,EAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,+CAIJ,kBAACF,EAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,qDAIJ,kBAACF,EAAA,EAAIC,KAAL,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,mDCaL0F,EApBH,WACV,OACI,oCACI,kBAAC,IAAD,KACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,UAAUC,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,gBAAgBC,UAAWvF,IACvC,kBAAC,IAAD,CAAOsF,KAAK,aAAaC,UAAW/D,IACpC,kBAAC,IAAD,CAAO8D,KAAK,SAASC,UAAWP,IAChC,kBAAC,IAAD,CAAOM,KAAK,QAAQC,UAAWN,IAC/B,kBAAC,IAAD,CAAOK,KAAK,IAAIC,UAAWE,IAC3B,kBAAC,IAAD,CAAOF,UAAWL,KAEtB,kBAAC,EAAD,SCfMQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5F,MAAK,SAAA6F,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.9b130405.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.scss';\r\nimport {Navbar, Nav} from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <Navbar className=\"d-none d-md-flex\" bg=\"light\" variant=\"light\">\r\n                <Navbar.Brand href=\"#home\">\r\n                    <img\r\n                        alt=\"myhealth\"\r\n                        src=\"holder.js/30px30\"\r\n                        width=\"30\"\r\n                        height=\"30\"\r\n                        className=\"d-inline-block align-top\"\r\n                    />\r\n                    myhealth\r\n                </Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link>\r\n                        <Link to=\"/\">\r\n                            Главная\r\n                        </Link>\r\n                    </Nav.Link>\r\n                    <Nav.Link>\r\n                        <Link to=\"/patients\">\r\n                            Пациенты\r\n                        </Link>\r\n                    </Nav.Link>\r\n                    <Nav.Link>\r\n                        <Link to=\"/news\">\r\n                            Новости\r\n                        </Link>\r\n                    </Nav.Link>\r\n                </Nav>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                    <Navbar.Text>\r\n                        <a href=\"#login\">Константин петров</a>\r\n                    </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport './AdminPage.scss';\r\n\r\nconst Admin = () => {\r\n    return (\r\n        <div>\r\n            Admin\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Admin;","import React, { useState, useEffect } from 'react';\r\nimport {Link, useRouteMatch} from 'react-router-dom';\r\n\r\nconst Patient = () => {\r\n    const rm = useRouteMatch();\r\n    const [patient, setPatient] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetch(`https://jsonplaceholder.typicode.com/users/${rm.params.id}`)\r\n            .then((r) => r.json())\r\n            .then((r) => setPatient(r));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"patient\">\r\n            { patient &&\r\n            <div className=\"user-card\">\r\n                <h1>{patient.name}</h1>\r\n                <p>\r\n                    Email:\r\n                    &nbsp;\r\n                    <a href={`emailto:${patient.email}`}>{patient.email}</a>\r\n                </p>\r\n                <p>\r\n                    Phone:\r\n                    &nbsp;\r\n                    <a href={`tel:${patient.phone}`}>{patient.phone}</a>\r\n                </p>\r\n                <Link to=\"/\">Назад</Link>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patient;","import React from 'react';\r\nimport {Card, Button} from 'react-bootstrap';\r\n\r\nconst Patient = (props) => {\r\n    const patient = props.data;\r\n\r\n    return (\r\n        <Card style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\r\n            <Card.Body>\r\n                <Card.Title>{patient.name}</Card.Title>\r\n                <Card.Text>\r\n                    Some quick example text to build on the card title and make up the bulk of\r\n                    the card's content.\r\n                </Card.Text>\r\n                <Button variant=\"primary\">Go somewhere</Button>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default Patient;","import React, {useState, useEffect} from 'react';\r\nimport Patient from '../../blocks/Patient';\r\n\r\nconst Patients = () => {\r\n    const [patients, setPatients] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then((r) => r.json())\r\n            .then((r) => setPatients(r));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"patients\">\r\n            <h1>Пациенты</h1>\r\n\r\n            {patients.map((patient) => (\r\n                <Patient key={patient.id} data={patient} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Patients;","import React, {useEffect, useState} from 'react';\r\nimport './HealthMetrics.scss';\r\nimport {Row, Col, Button, Figure} from 'react-bootstrap';\r\n\r\nconst HealthMetrics = () => {\r\n    const [metrics, setMetrics] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://my-json-server.typicode.com/3lement3/VH/health')\r\n            .then((r) => r.json())\r\n            .then((r) => setMetrics(r));\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"mt-5\">\r\n            <Row>\r\n                <Col>\r\n                    <h2>Сегодня</h2>\r\n                    <p>Добавьте данные о своем здоровье для получения персональных рекомендаций</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {metrics.map((metric) => (\r\n                        <Figure>\r\n                            <Figure.Image\r\n                                src={metric.picture}\r\n                                alt={metric.title}\r\n                            />\r\n                            <Figure.Caption>\r\n                                {metric.title}\r\n                            </Figure.Caption>\r\n                        </Figure>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default HealthMetrics;","import React, {useEffect, useState} from 'react';\r\nimport './Recommends.scss';\r\nimport {Row, Col, Card, Button, Figure} from 'react-bootstrap';\r\n\r\nconst Recommends = () => {\r\n    const [recs, setRecs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://my-json-server.typicode.com/3lement3/VH/recommends')\r\n            .then((r) => r.json())\r\n            .then((r) => setRecs(r));\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"mt-5\">\r\n            <Row>\r\n                <Col>\r\n                    <h2>Рекомендации</h2>\r\n                    <p>Персональные советы по улучшению Вашего здоровья</p>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {recs.map((rec) => (\r\n                    <Col md=\"2\">\r\n                        <Card style={{ width: '18rem' }}>\r\n                            <Card.Img variant=\"top\" src={rec.picture} />\r\n                            <Card.Body>\r\n                                <Card.Title>{rec.title}</Card.Title>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Recommends;","import React, {useEffect, useState} from 'react';\r\nimport './Drugs.scss';\r\nimport {Row, Col, Button, Figure} from 'react-bootstrap';\r\n\r\nconst Drugs = () => {\r\n    const [drugs, setDrugs] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://my-json-server.typicode.com/3lement3/VH/reception')\r\n            .then((r) => r.json())\r\n            .then((r) => setDrugs(r));\r\n    }, []);\r\n\r\n    return (\r\n        <section className=\"mt-5\">\r\n            <Row>\r\n                <Col>\r\n                    <h2>Прием лекарств</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {drugs.map((drug) => (\r\n                        <Figure>\r\n                            <Figure.Image\r\n                                src={drug.picture}\r\n                                alt={drug.title}\r\n                            />\r\n                            <Figure.Caption>\r\n                                {drug.title}\r\n                            </Figure.Caption>\r\n                        </Figure>\r\n                    ))}\r\n                </Col>\r\n            </Row>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Drugs;","import React from 'react';\r\nimport './NewsItem.scss';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nconst NewsItem = (props) => {\r\n    return (\r\n        <Card className=\"mt-2\" style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"top\" src={props.data.picture} />\r\n            <Card.Body>\r\n                <Card.Title>{props.data.title}</Card.Title>\r\n                <Card.Text>\r\n                    {props.data.body}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default NewsItem;","import React, {useState, useEffect} from 'react';\r\nimport './News.scss';\r\nimport NewsItem from \"../NewsItem\";\r\nimport {Col, Tabs, Tab} from \"react-bootstrap\";\r\n\r\nconst News = () => {\r\n    const [key, setKey] = useState(1);\r\n    const [rubrics, setRubrics] = useState([]);\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://my-json-server.typicode.com/3lement3/VH/rubric')\r\n            .then((r) => r.json())\r\n            .then((r) => setRubrics(r));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch('https://my-json-server.typicode.com/3lement3/VH/news')\r\n            .then((r) => r.json())\r\n            .then((r) => setPosts(r));\r\n    }, []);\r\n\r\n    return (\r\n        <section>\r\n            <h2>Новости</h2>\r\n\r\n            <Tabs\r\n                id=\"controlled-tab-example\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}\r\n            >\r\n                {rubrics.map((rubric) => (\r\n                    <Tab eventKey={rubric.id} title={rubric.title}>\r\n                        {posts.filter((post) => post.rubricId === rubric.id)\r\n                            .map((post) => (\r\n                            <Col>\r\n                                <NewsItem key={post.id} data={post}/>\r\n                            </Col>\r\n                        ))}\r\n                    </Tab>\r\n                ))}\r\n            </Tabs>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default News;","import React from 'react';\r\nimport './EducationItem.scss';\r\nimport {Card} from 'react-bootstrap';\r\n\r\nconst EducationItem = (props) => {\r\n    return (\r\n        <Card className=\"mt-2\" style={{ width: '18rem' }}>\r\n            <Card.Img variant=\"top\" src={props.data.picture} />\r\n            <Card.Body>\r\n                <Card.Title>{props.data.title}</Card.Title>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n};\r\n\r\nexport default EducationItem;","import React, {useState, useEffect} from 'react';\r\nimport './Education.scss';\r\nimport {Col, Tabs, Tab} from 'react-bootstrap';\r\nimport EducationItem from \"../EducationItem\";\r\n\r\nconst Education = () => {\r\n    const [key, setKey] = useState(1);\r\n    const [cats, setCats] = useState([]);\r\n    const [edu, setEdu] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('https://my-json-server.typicode.com/3lement3/VH1/eduCategory')\r\n            .then((r) => r.json())\r\n            .then((r) => setCats(r));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetch('https://my-json-server.typicode.com/3lement3/VH1/education')\r\n            .then((r) => r.json())\r\n            .then((r) => setEdu(r));\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <section>\r\n            <h2>Образование</h2>\r\n            <p>Проверь свои знания о здоровье</p>\r\n\r\n            <Tabs\r\n                id=\"controlled-tab-example\"\r\n                activeKey={key}\r\n                onSelect={(k) => setKey(k)}\r\n            >\r\n                {cats.map((cat) => (\r\n                    <Tab eventKey={cat.id} title={cat.title}>\r\n                        {edu.filter((eduItem) => eduItem.eduCat === cat.id)\r\n                            .map((post) => (\r\n                                <Col>\r\n                                    <EducationItem key={post.id} data={post}/>\r\n                                </Col>\r\n                            ))}\r\n                    </Tab>\r\n                ))}\r\n            </Tabs>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Education;","import React from 'react';\r\nimport './HomePage.scss';\r\nimport {Jumbotron, Container} from 'react-bootstrap';\r\nimport HealthMetrics from '../../blocks/HealthMetrics';\r\nimport Recommends from '../../blocks/Recommends';\r\nimport Drugs from '../../blocks/Drugs';\r\nimport News from '../../blocks/News';\r\nimport Education from '../../blocks/Education';\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <>\r\n            <Jumbotron className=\"hello\">\r\n                <h1>Анастасия</h1>\r\n                <p>\r\n                    Добрый день!\r\n                </p>\r\n            </Jumbotron>\r\n            <Container fluid>\r\n                <HealthMetrics />\r\n                <Recommends />\r\n                <Drugs />\r\n                <News/>\r\n                <Education/>\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Homepage;","import React from 'react';\r\nimport './NewsPage.scss';\r\nimport News from \"../../blocks/News\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\nconst NewsPage = () => {\r\n\r\n    return (\r\n        <Container>\r\n            <News />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default NewsPage;","import React from 'react';\r\nimport './EducationPage.scss';\r\nimport News from \"../../blocks/News\";\r\nimport {Container} from \"react-bootstrap\";\r\n\r\nconst EducationPage = () => {\r\n\r\n    return (\r\n        <Container>\r\n            <News />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default EducationPage;","import React from 'react';\r\n\r\nconst Notfound = () => {\r\n    return (\r\n        <div>\r\n            Notfound\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Notfound;","import React from 'react';\r\nimport {Nav, Navbar} from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport './MobileMenu.scss';\r\n\r\nconst MobileMenu = () => {\r\n    return (\r\n        <Navbar className=\"d-md-none\" fixed=\"bottom\" bg=\"light\" variant=\"light\">\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link>\r\n                    <Link to=\"/\">\r\n                        Главная\r\n                    </Link>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                    <Link to=\"#\">\r\n                        Обучение\r\n                    </Link>\r\n                </Nav.Link>\r\n                <Nav.Link>\r\n                    <Link to=\"#\">\r\n                        Профиль\r\n                    </Link>\r\n                </Nav.Link>\r\n            </Nav>\r\n        </Navbar>\r\n    );\r\n};\r\n\r\nexport default MobileMenu;","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport 'holderjs';\nimport Header from './blocks/Header';\nimport AdminPage from './pages/AdminPage';\nimport Patient from './pages/Patient';\nimport Patients from './pages/Patients';\nimport HomePage from './pages/HomePage';\nimport NewsPage from './pages/NewsPage';\nimport EducationPage from './pages/EducationPage';\nimport Notfound from './pages/Notfound';\nimport MobileMenu from \"./blocks/MobileMenu\";\n\nconst App = () => {\n  return (\n      <>\n          <Router>\n              <Header/>\n              <Switch>\n                  <Route path=\"/admin/\" component={AdminPage}/>\n                  <Route path=\"/patients/:id\" component={Patient}/>\n                  <Route path=\"/patients/\" component={Patients}/>\n                  <Route path=\"/news/\" component={NewsPage}/>\n                  <Route path=\"/edu/\" component={EducationPage}/>\n                  <Route path=\"/\" component={HomePage}/>\n                  <Route component={Notfound}/>\n              </Switch>\n              <MobileMenu/>\n          </Router>\n      </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}